{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "file://ev.schema.v1.json",
  "title": "Electrical Validation Schema",
  "description": "This is a schema for importing Electrical Validation Settings by sending payload through gRPC. It expects single protocol settings at a time.",
  "type": "object",
  "properties": {
    "importSchema": {
      "description": "Name of the schema.",
      "enum": [ "Electrical Validation" ]
    },
    "protocol": {
      "description": "Name of the protocol.",
      "enum": [
        "I2C",
        "I2S",
        "MIPI I3C",
        "MIPI SPMI",
        "MIPI RFFE",
        "PDM",
        "3-wire SPI",
        "4-wire SPI",
        "UART"
      ]
    }
  },
  "required": [
    "importSchema",
    "protocol"
  ],
  "allOf": [
    {
      "description": "I2C configuration.",
      "if": {
        "properties": {
          "protocol": {
            "const": "I2C"
          }
        },
        "required": [
          "protocol"
        ]
      },
      "then": {
        "type": "object",
        "properties": {
          "decode": {
            "$ref": "file://i2c/decode.json"
          },
          "trigger": {
            "$ref": "file://i2c/trigger.json"
          },
          "validation": {
            "$ref": "file://i2c/validation.json"
          },
          "channel": {
            "type": "array",
            "items": {
              "$ref": "file://i2c/channel.json"
            }
          }
        }
      }
    },
    {
      "description": "I2S configuration.",
      "if": {
        "properties": {
          "protocol": {
            "const": "I2S"
          }
        },
        "required": [
          "protocol"
        ]
      },
      "then": {
        "type": "object",
        "properties": {
          "decode": {
            "$ref": "file://i2s/decode.json"
          },
          "trigger": {
            "$ref": "file://i2s/trigger.json"
          },
          "validation": {
            "$ref": "file://i2s/validation.json"
          },
          "channel": {
            "type": "array",
            "items": {
              "$ref": "file://i2s/channel.json"
            }
          }
        }
      }
    },
    {
      "description": "MIPI I3C configuration.",
      "if": {
        "properties": {
          "protocol": {
            "const": "MIPI I3C"
          }
        },
        "required": [
          "protocol"
        ]
      },
      "then": {
        "type": "object",
        "properties": {
          "decode": {
            "$ref": "file://i3c/decode.json"
          },
          "trigger": {
            "$ref": "file://i3c/trigger.json"
          },
          "validation": {
            "$ref": "file://i3c/validation.json"
          },
          "channel": {
            "type": "array",
            "items": {
              "$ref": "file://i3c/channel.json"
            }
          }
        }
      }
    },
    {
      "description": "MIPI RFFE configuration.",
      "if": {
        "properties": {
          "protocol": {
            "const": "MIPI RFFE"
          }
        },
        "required": [
          "protocol"
        ]
      },
      "then": {
        "type": "object",
        "properties": {
          "decode": {
            "$ref": "file://rffe/decode.json"
          },
          "trigger": {
            "$ref": "file://rffe/trigger.json"
          },
          "validation": {
            "$ref": "file://rffe/validation.json"
          },
          "channel": {
            "type": "array",
            "items": {
              "$ref": "file://rffe/channel.json"
            }
          }
        }
      }
    },
    {
      "description": "MIPI SPMI configuration.",
      "if": {
        "properties": {
          "protocol": {
            "const": "MIPI SPMI"
          }
        },
        "required": [
          "protocol"
        ]
      },
      "then": {
        "type": "object",
        "properties": {
          "decode": {
            "$ref": "file://spmi/decode.json"
          },
          "trigger": {
            "$ref": "file://spmi/trigger.json"
          },
          "validation": {
            "$ref": "file://spmi/validation.json"
          },
          "channel": {
            "type": "array",
            "items": {
              "$ref": "file://spmi/channel.json"
            }
          }
        }
      }
    },
    {
      "description": "PDM configuration.",
      "if": {
        "properties": {
          "protocol": {
            "const": "PDM"
          }
        },
        "required": [
          "protocol"
        ]
      },
      "then": {
        "type": "object",
        "properties": {
          "decode": {
            "$ref": "file://pdm/decode.json"
          },
          "trigger": {
            "$ref": "file://pdm/trigger.json"
          },
          "validation": {
            "$ref": "file://pdm/validation.json"
          },
          "channel": {
            "type": "array",
            "items": {
              "$ref": "file://pdm/channel.json"
            }
          }
        }
      }
    },
    {
      "description": "3-wire SPI configuration.",
      "if": {
        "properties": {
          "protocol": {
            "const": "3-wire SPI"
          }
        },
        "required": [
          "protocol"
        ]
      },
      "then": {
        "type": "object",
        "properties": {
          "decode": {
            "$ref": "file://spi_3wire/decode.json"
          },
          "trigger": {
            "$ref": "file://spi_3wire/trigger.json"
          },
          "validation": {
            "$ref": "file://spi_3wire/validation.json"
          },
          "channel": {
            "type": "array",
            "items": {
              "$ref": "file://spi_3wire/channel.json"
            }
          }
        }
      }
    },
    {
      "description": "4-wire SPI configuration.",
      "if": {
        "properties": {
          "protocol": {
            "const": "4-wire SPI"
          }
        },
        "required": [
          "protocol"
        ]
      },
      "then": {
        "type": "object",
        "properties": {
          "decode": {
            "$ref": "file://spi_4wire/decode.json"
          },
          "trigger": {
            "$ref": "file://spi_4wire/trigger.json"
          },
          "validation": {
            "$ref": "file://spi_4wire/validation.json"
          },
          "channel": {
            "type": "array",
            "items": {
              "$ref": "file://spi_4wire/channel.json"
            }
          }
        }
      }
    },
    {
      "description": "UART configuration.",
      "if": {
        "properties": {
          "protocol": {
            "const": "UART"
          }
        },
        "required": [
          "protocol"
        ]
      },
      "then": {
        "type": "object",
        "properties": {
          "decode": {
            "$ref": "file://uart/decode.json"
          },
          "trigger": {
            "$ref": "file://uart/trigger.json"
          },
          "validation": {
            "$ref": "file://uart/validation.json"
          },
          "channel": {
            "type": "array",
            "items": {
              "$ref": "file://uart/channel.json"
            }
          }
        }
      }
    }
  ],
  "unevaluatedProperties": false
}
