syntax = "proto3";

package aqvisa;

service AqVISA {
    rpc ViWrite (ViWriteRequest) returns (ViWriteResponse) {}
    rpc ViRead (ViReadRequest) returns (ViReadResponse) {}
    rpc ViGetCommandResult (ViGetCommandResultRequest) returns (ViGetCommandResultResponse) {
        option deprecated = true;
    }
}

// Enums
enum AQVI_STATUS {
    // No Error
    AQVI_NO_ERROR = 0;

    // Error: Command process failed
    AQVI_PROC_FAIL = 2;

    // Warn: There's no any data returned.
    AQVI_NO_RETURN_DATA = 7;

    // Warn: Previous command still processing
    AQVI_PREVIOUS_CMD_PROCESSING = 12;

    // Error: Command incomplete
    AQVI_COMMAND_INCOMPLETE = 1001;

    // Error: Command formate error
    AQVI_COMMAND_FORMAT_ERROR = 1009;

    // Error: Incorrect input file
    AQVI_INPUT_FILE_DIR_INVALID = 1010;

    // Error: Row/Column index error
    AQVI_ROW_COL_INDEX_INVALID = 1014;

    // Error: Missing input parametes or not enough input parameter
    AQVI_INPUT_PARAMETER_INVALID = 1015;

    // Error: Input settings file format error
    AQVI_INPUT_SETTING_FILE_FORMAT_ERROR = 1016;

    // Error: Unable to reach select file directory
    AQVI_FILE_ACCESS_ERROR = 1017;

    // Error: Input commands requires existint measurement report
    AQVI_MEASUREMENT_REPORT_INVALID = 1019;

    // Error: Waveform data not ready
    AQVI_WAVEFORM_NOT_READY = 1022;

    // Error: Not in EV before any EV request
    AQVI_NOT_IN_EV_MODE = 1023;

    // Error: No EV valid analysis result
    AQVI_NO_EV_ANALYSIS_RESULT = 1024;

    // Error: Unsupported feature
    AQVI_UNSUPPORT_FEATURE = 9995;

    // Error: Unknown command
    AQVI_UNKNOWN_COMMAND_ERROR = 9997;
}


message ViWriteRequest {
    bytes command = 1;
}

message ViWriteResponse {
    optional bytes job_id = 1;
    AQVI_STATUS status_code = 2;
}

message ViGetCommandResultRequest {
    option deprecated = true;
    bytes job_id = 1;
}

message ViGetCommandResultResponse {
    option deprecated = true;
    AQVI_STATUS status_code = 1;
}

message ViReadRequest {
    bytes job_id = 1 [deprecated = true];
    int64 count = 2;
}

message ViReadResponse {
    AQVI_STATUS status_code = 1;
    optional bytes command_response = 2;
    optional int64 ret_count = 3;
}
